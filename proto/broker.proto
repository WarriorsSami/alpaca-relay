syntax = "proto3";

option go_package = "generated/proto";

package broker;

service Broker {
  rpc Publish(PublishRequest) returns (PublishResponse);
  rpc Subscribe(SubscribeRequest) returns (stream Message);
  rpc DeclareExchange(DeclareExchangeRequest) returns (DeclareExchangeResponse);
  rpc DeclareQueue(DeclareQueueRequest) returns (DeclareQueueResponse);
}

message PublishRequest {
  string exchange = 1;
  string routing_key = 2;
  string payload = 3;
}

message PublishResponse {
  bool success = 1;
}

message SubscribeRequest {
  string queue = 1;
}

message Message {
  string payload = 1;
}

message DeclareExchangeRequest {
  string exchange = 1;
  ExchangeType type = 2;
}

enum ExchangeType {
  DIRECT = 0;
  FANOUT = 1;
  TOPIC = 2;
}

message DeclareExchangeResponse {
  bool success = 1;
}

message DeclareQueueRequest {
  string queue = 1;
  QueueType type = 2;
}

enum QueueType {
  NORMAL = 0;
  DURABLE = 1;
}

message DeclareQueueResponse {
  bool success = 1;
}